// Code generated by mockery v2.51.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// Callback is an autogenerated mock type for the Callback type
type Callback struct {
	mock.Mock
}

// ProcessData provides a mock function with given fields: data
func (_m *Callback) ProcessData(data string) string {
	ret := _m.Called(data)

	if len(ret) == 0 {
		panic("no return value specified for ProcessData")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func(string) string); ok {
		r0 = rf(data)
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// NewCallback creates a new instance of Callback. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewCallback(t interface {
	mock.TestingT
	Cleanup(func())
}) *Callback {
	mock := &Callback{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
